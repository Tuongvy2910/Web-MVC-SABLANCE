@model SABLANCE.Areas.Admin.Models.CustomerModel
@{
    var dataMember = ViewBag.dataMember as List<SABLANCE.Models.MemberRating>;
    var data = ViewBag.EditCustomer as SABLANCE.Models.Customer;
}
<link href="~/Content/customeadmin.css" rel="stylesheet" />
<div class="modal-body" id="EditViewModalContent">
    <div class="col-lg-12" style="border-bottom:0.2px solid; margin-bottom: 10px;">
        <div class="row">
            <div class="col-lg-4" style="align-self: end;">
                <div class="form-group">
                    <label>Mã định danh</label>
                    <input id="codeCus" disabled="disabled" value="@data.Code" name="Code" type="text" class="form-control" />
                    <div id="CodeError" class="error-message" style="color: red; font-size: 11px;"></div>
                </div>
            </div>
            <div class="col-lg-4">
                <div class="form-group">
                    <label>Họ Nhân viên</label>
                    @if (!string.IsNullOrEmpty(data.LastName))
                    {
                        <input id="LastName" name="LastName" type="text" value="@data.LastName" class="form-control" />
                    }
                    else
                    {
                        <input id="LastName" name="LastName" type="text" value="" class="form-control" placeholder="Họ nhân viên trống" />
                    }
                    <div id="lastNameError" class="error-message" style="color: red; font-size: 11px;"></div>
                </div>
            </div>
            <div class="col-lg-4">
                <div class="form-group">
                    <label>Tên Nhân viên</label>
                    <input id="FirstName" name="FirstName" type="text" value="@data.FirstName" class="form-control" />
                    <div id="firstNameError" class="error-message" style="color: red; font-size: 11px;"></div>
                </div>
            </div>
        </div>
        <div class="row">


            <div class="col-lg-4">
                <div class="form-group">
                    <label>Giới tính</label>
                    <select id="Gender" name="Gender" class="form-control" >
                        <option value="Nam">Nam</option>
                        <option value="Nữ">Nữ</option>
                    </select>
                </div>
            </div>
            <div class="col-lg-4">
                <div class="form-group">
                    <label>Ngày sinh</label>
                    <input id="DateOfBirth" name="DateOfBirth" value="@((data.DateOfBirth.HasValue ? data.DateOfBirth.Value.ToString("yyyy-MM-dd") : ""))" type="date" class="form-control" />
                </div>
                <div id="dateOfBirthError" class="error-message" style="color: red; font-size: 11px;"></div>
            </div>
            <div class="col-lg-4">
                <div class="form-group">
                    <label>Hạng thành viên: </label>
                    <select id="MemberRatingsID" name="MemberRatingsID" class="form-control">
                        @foreach (var item in dataMember)
                        {
                            <option value="@item.ID">@item.Name</option>
                        }
                    </select>
                </div>
            </div>
        </div>
        <div class="row">
            
            <div class="col-lg-6">
                <div class="form-group">
                    <label>Số điện thoại</label>
                    <input id="Phone" name="Phone" type="text" value="@data.Phone" maxlength="12" class="form-control" disabled/>
                    <div class="error-message" style="color: red; font-size: 11px; font-style:italic;">Số điện thoại khách hàng không được thay đổi</div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="form-group">
                    <label>Email</label>
                    @if (!string.IsNullOrEmpty(data.Email))
                    {
                        <input id="Email" name="Email" type="text" value="@data.Email" class="form-control" />
                    }
                    else
                    {
                        <input id="Email" name="Email" type="text" value="" class="form-control" placeholder="Email nhân viên trống" />
                    }
                    <div id="emailError" class="error-message" style="color: red; font-size: 11px;"></div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12">
                <div class="form-group">
                    <label>Địa chỉ</label>
                    <textarea id="Address" class="form-control col-lg-12" style="float: none !important;">  @(data != null ? data.Address : string.Empty)</textarea>
                    <div id="addressError" class="error-message" style="color: red; font-size: 11px;"></div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-12">
        <div class="row">
            <div class="col-lg-4">
                <div class="form-group">
                    <label>Mã tài khoản</label>
                    <input id="accountId" name="AccountID" type="text" value="@data.AccountID" class="form-control" readonly />
                </div>
            </div>
            <div class="col-lg-4">
                <div class="form-group">
                    <label>Tên tài khoản</label>
                    <input id="AccountType" name="AccountType" value="@data.Account.AccountType" type="text" class="form-control" readonly />

                </div>
            </div>
            <div class="col-lg-4">
                <div class="form-group">
                    <label>Ngày đăng ký/Ngày vào làm</label>
                    <input id="AccountType" name="AccountType" value="@data.Account.RegistrationDate.ToString("dd/MM/yyyy")" type="text" class="form-control" readonly />
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
            <button type="button" id="edit-customer" class="btn btn-primary">Cập nhật</button>
        </div>
    </div>
</div>





<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.21.1/axios.min.js" defer></script>
<script src="~/Scripts/customeradmin.js"></script>
<script type="text/javascript">

        $(document).ready(function () {
            var genderValue = "@data.Gender"; // Giả sử bạn lấy giá trị giới tính từ model
            var memberRatingsIDValue = "@data.MemberID";
            // Sử dụng jQuery để chọn tùy chọn có giá trị là genderValue
            $("#Gender").val(genderValue);
            // Sử dụng jQuery để chọn tùy chọn có giá trị là categoriesEmployeeIDValue
            $("#MemberRatingsID").val(memberRatingsIDValue);
            
            function editAction(customerID) {
                if (checkEditCustomer()) {
                    var Code = $('#codeCus').val();
                    var FirstName = $('#FirstName').val();
                    var LastName = $('#LastName').val();
                    var Gender = $('#Gender').val();
                    var DateOfBirth = $('#DateOfBirth').val();
                    var Phone = $('#Phone').val();
                    var Email = $('#Email').val();
                    var memberRatingsID = $('#MemberRatingsID').val();
                    var Address = $('#Address').val();

                    $.ajax({
                        url: '@Url.Action("EditCustomer")',
                        type: 'POST',
                        data: {
                            ID: customerID,
                            Code: Code,
                            FirstName: FirstName,
                            LastName: LastName,
                            Gender: Gender,
                            DateOfBirth: DateOfBirth,
                            Phone: Phone,
                            Email: Email,
                            MemberRatingsID: memberRatingsID,
                            Address: Address,
                        },

                        success: function (data) {
                            console.log(data);
                            if (data.status == 1) {
                                window.location.href = '@Url.Action("ListCustomer", "Customer")';
                                alert(data.text);
                            } else {
                                alert(data.text);
                            }
                        },
                        error: function (xhr, status, error) {
                            alert('Đã có lỗi xảy ra thêm thông tin nhân viên.');
                        }
                    });
                }
            }
            $('#edit-customer').on('click', function (event) {
                var customerID = "@data.ID"/* Lấy giá trị ID từ đâu đó */;
                editAction(customerID);
            });
        });

/*     Gọi hàm createAction() khi nhấn nút "Thêm nhân viên"*/



</script>
