@model List<SABLANCE.Models.Product>
@{
    var dataCate = ViewBag.EditCate as SABLANCE.Models.CategoriesProduct;
    var data = ViewBag.EditProduct as List<SABLANCE.Models.Product>;
}

<link href="~/Content/productadmin.css" rel="stylesheet" />
<div class="modal-body" id="EditViewModalContent">
    <div class="col-lg-12" style="margin-bottom: 10px;">
        <div class="row">

        <div class="col-lg-4" style="align-self: end;">
            <div class="form-group">
                <input id="IDCate" class="form-control" value="@dataCate.ID" type="text" style="display: none" />
                <label>Mã danh mục<span class="required">*</span></label>
                <input id="CodeCate" name="Code" type="text" value="@dataCate.Code.ToUpper()" class="form-control" placeholder="Nhập mã loại sản phẩm" />
                <div id="CodeError" class="error-message" style="color: red; font-size: 11px;"></div>
            </div>
        </div>
        <div class="col-lg-8">
            <div class="form-group">
                <label>Tên danh mục sản phẩm <span class="required">*</span></label>
                <input id="Name" name="Name" value ="@dataCate.Name" type="text" class="form-control" placeholder="Nhập tên loại sản phẩm" />
                <div id="NameError" class="error-message" style="color: red; font-size: 11px;"></div>
            </div>
        </div>
    </div>
        <div class="col-lg-12" style="border-top: 0.2px solid #000; border-bottom: none !important;">
            <div class="row" id="showcus" style="margin-top: 10px;">
                <div class="list-add" style="width:100%;">
                    <div>
                        <h2>DANH SÁCH CHI TIẾT SẢN PHẨM</h2>
                    </div>
                </div>
                @if (data.Count > 0)
                {
                    <table id="product-table" class=" col-lg-12 table table-bordered table-responsives table-striped">
                        <thead>
                            <tr>
                                <th>Mã sản phẩm</th>
                                <th>Tên sản phẩm</th>
                                <th>Đơn vị tính</th>
                                <th>Mô tả sản phẩm</th>
                                <th>Số lượng mặt hàng</th>
                                <th></th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody id="product">
                            @foreach (var item in data)
                            {
                                <tr id="trow_@item.ID">
                                    <td id="proID" style="width: 10%;">
                                        <input id="ProductCode" value="@item.Code" class="form-control" disabled />
                                        <input id="ProductID" value="@item.ID" class="form-control" disabled style="display: none;" />
                                    </td>
                                    <td id="proName">
                                        <input id="ProductName" value="@item.Name" class="form-control edit-data" disabled />
                                        <div id="ProductNameError_@item.ID" class="error-message" style="color: red; font-size: 11px;"></div>
                                    </td>
                                    <td id="proUnit">
                                        <select id="Unit" name="Unit" disabled class="form-control edit-data">
                                            <option value="Đôi" @if (item.Unit == "Đôi") { <text> selected</text> }>Đôi</option>
                                            <option value="Túi" @if (item.Unit == "Túi") { <text> selected</text> }>Túi</option>
                                            <option value="Chiếc" @if (item.Unit == "Chiếc") { <text> selected</text> }>Chiếc</option>
                                        </select>
                                    </td>
                                    <td id="proDescription">
                                        @if (!string.IsNullOrEmpty(item.Description))
                                        {
                                            <textarea id="Description" name="Description" disabled class="form-control edit-data"> @item.Description</textarea>
                                        }
                                        else
                                        {
                                            <textarea id="Description" placeholder="Mô tả sản phẩm đang trống" disabled name="Description" class="form-control edit-data"></textarea>
                                        }
                                    </td>
                                    <td id="proCount" style="text-align: center;">
                                        @(ViewBag.ProductCountCate.ContainsKey(item.ID) ? ViewBag.ProductCountCate[item.ID] : 0)
                                    </td>
                                    <td style="text-align: center;">
                                        <a onclick="EditCateProduct(@item.ID);">
                                            <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="20" height="20" viewBox="0,0,255.99603,255.99603">
                                                <g fill="#000" fill-rule="nonzero" stroke="none" stroke-width="1" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="10" stroke-dasharray="" stroke-dashoffset="0" font-family="none" font-size="none" style="mix-blend-mode: normal"><g transform="scale(10.66667,10.66667)"><path d="M18,2l-2.41406,2.41406l4,4l2.41406,-2.41406zM14.07617,5.92383l-11.07617,11.07617v4h4l11.07617,-11.07617z"></path></g></g>
                                            </svg>
                                        </a>
                                    </td>
                                    <td style="text-align: center;">
                                        <a onclick="DeleteProduct(@item.ID);">
                                            <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="20" height="20" viewBox="0,0,255.99603,255.99603">
                                                <g fill="#000" fill-rule="nonzero" stroke="none" stroke-width="1" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="10" stroke-dasharray="" stroke-dashoffset="0" font-family="none" font-size="none" style="mix-blend-mode: normal"><g transform="scale(10.66667,10.66667)"><path d="M10,2l-1,1h-6v2h18v-2h-6l-1,-1zM4.36523,7l1.70313,15h11.86328l1.70313,-15z"></path></g></g>
                                            </svg>
                                        </a>
                                    </td>
                                </tr>
                            }
                        </tbody>

                    </table>
                }
                else
                {
                    <div class="col-lg-12" style="text-align: center; font-style: italic">
                        Không có sản phẩm
                    </div>

                }



            </div>
            <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
            <button type="button" id="edit-catePro" class="btn btn-primary">Lưu</button>
        </div>
        </div>
</div>
    </div>
<script src="~/Scripts/productadmin.js"></script>
<script>
    var isEditMode = false;

    function EditCateProduct(productId) {
        var productRow = $("#trow_" + productId);

        // Kiểm tra xem dòng đó có class "editing" hay không
        if (productRow.hasClass("editing")) {
            // Tắt chế độ chỉnh sửa cho dòng đó
            productRow.find(".edit-data").prop("disabled", true);

            // Hủy class "editing" cho dòng đó
            productRow.removeClass("editing");
        } else {
            // Bật chế độ chỉnh sửa cho dòng đó
            productRow.find(".edit-data").prop("disabled", false);
            // Tắt chế độ chỉnh sửa cho tất cả các dòng khác
            $(".editing").find(".edit-data").prop("disabled", true);

            // Hủy class "editing" cho tất cả các dòng khác
            $(".editing").removeClass("editing");

            // Đặt class "editing" cho dòng đó
            productRow.addClass("editing");
        }
    }
    function DeleteProduct(productId) {
            // Hiển thị hộp thoại xác nhận hoặc thực hiện xóa trực tiếp

            // Lấy phần tử tr (dòng) cần xóa
            var rowToDelete = $("#trow_" + productId);

            // Kiểm tra xem có phải là phần tử tr không

            $.ajax({
            url: '@Url.Action("DeleteProduct", "ProductAd")',
            type: 'POST',
            data: {
                Id: productId
            },
            success: function (data) {
                if (data.status === 1) {
                    if (rowToDelete.length > 0) {
                        rowToDelete.remove();
                    } else {
                        console.log("Không tìm thấy dòng cần xóa");
                    }
                    alert(data.text);
                } else {
                    alert(data.text);
                }
            },
            error: function (xhr, status, error) {
                console.log(error);
                alert('Đã có lỗi xảy ra khi xóa mặt hàng.');
            }
        });

        }
$(document).ready(function () {

    function EditCateProductAction() {
        if (checkCateProductDetail()) {
            var IDCate = $('#IDCate').val();
            var CodeCate = $('#CodeCate').val();
            var Name = $('#Name').val();
            var IDProduct = $('#product-table input[id^="ProductID"').map(function () {
                return $(this).val();
            }).get();
            var CodeProduct = $('#product-table input[id^="ProductCode"').map(function () {
                return $(this).val();
            }).get();
            var NameProduct = $('#product-table input[id^="ProductName"').map(function () {
                return $(this).val();
            }).get();
            var ProductUnit = $('[id^="Unit"]').map(function () {
                return $(this).val();
            }).get();
            var Description = $('#product-table textarea[id^="Description"]').map(function () {
                return $(this).val();
            }).get();

            var formData = new FormData();
            formData.append("ID", IDCate);
            formData.append("Code", CodeCate);
            formData.append("Name", Name);
            for (var i = 0; i < IDProduct.length; i++) {

                if (NameProduct[i] !== "") {

                    formData.append("IdPro[" + i + "]", IDProduct[i]);
                    formData.append("CodePro[" + i + "]", CodeProduct[i]);
                    formData.append("NamePro[" + i + "]", NameProduct[i]);
                    formData.append("Unit[" + i + "]", ProductUnit[i]);
                    formData.append("Description[" + i + "]", Description[i]);
                }
                else
                {
                    alert('Tên sản phẩm không được để trống.');
                }
                    // Hiển thị lỗi cho dòng có name trốn
            }
            $.ajax({
                    url: '@Url.Action("EditCateProduct")',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (data) {
                        console.log(data);
                                if (data.status == 1) {
                                    window.location.href = '@Url.Action("ListCateProduct", "ProductAd")';
                                alert(data.text);
                                }  else {
                                alert(data.text);
                        }
                    },
                    error: function (xhr, status, error) {
                             alert('Đã có lỗi xảy ra cập nhật loại sản phẩm.');
                    }
             });


    }
 }


    // Gọi hàm createAction() khi nhấn nút "Thêm nhân viên"
    $('#edit-catePro').on('click', function (event) {
        EditCateProductAction();
    });

});
</script>
